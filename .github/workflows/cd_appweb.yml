# name: CD appweb

# on:
#   workflow_run:
#     workflows: ["CI appweb"]
#     types:
#       - completed

# jobs:
#   deploy:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push Docker image
#       run: |
#         docker build -t appweb ./app
#         docker tag appweb olaffsen/appweb:latest
#         docker push olaffsen/appweb:latest


name: CD appweb

on:
  workflow_run:
    workflows: ["CI appweb"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t appweb ./app
        docker tag appweb olaffsen/appweb:latest
        docker push olaffsen/appweb:latest

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check if Azure Container Instance exists
      id: check_aci
      run: |
        if az container show --resource-group e4-rg --name e4aci --output none 2>/dev/null; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi

    # - name: Update Azure Container Instance with new image
    #   if: env.exists == 'true'
    #   run: |
    #     az container create \
    #       --resource-group e4-rg \
    #       --name e4aci \
    #       --image olaffsen/appweb:latest \
    #       --cpu 1 \
    #       --memory 1.5 \
    #       --ports 8000 \
    #       --environment-variables DJANGO_SETTINGS_MODULE=appweb.settings \
    #       --restart-policy OnFailure \
    #       --registry-login-server index.docker.io \
    #       --registry-username ${{ secrets.DOCKER_USERNAME }} \
    #       --registry-password ${{ secrets.DOCKER_PASSWORD }}
